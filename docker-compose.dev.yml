version: '3.8'

services:
  # Development version of the app with hot reload
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: clipscommerce-app-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/clipscommerce
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - NEXT_PUBLIC_OAUTH_REDIRECT_BASE_URL=http://localhost:3000
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
    env_file:
      - .env.local
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - clipscommerce-network
    volumes:
      # Bind mount source code for hot reload
      - .:/app
      - /app/node_modules
      - /app/.next
      - app-dev-logs:/app/logs
    command: npm run dev

  # PostgreSQL with more development-friendly settings
  postgres:
    environment:
      POSTGRES_DB: clipscommerce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d:ro
      - ./scripts:/scripts:ro
    command: >
      postgres
      -c log_statement=all
      -c log_destination=stderr
      -c log_line_prefix='%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
      -c log_checkpoints=on
      -c log_connections=on
      -c log_disconnections=on
      -c log_lock_waits=on
      -c shared_preload_libraries=pg_stat_statements
      -c track_activity_query_size=2048
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB

  # Redis with development configuration
  redis:
    volumes:
      - redis-dev-data:/data
      - ./redis.dev.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf --loglevel verbose

volumes:
  postgres-dev-data:
    driver: local
  redis-dev-data:
    driver: local
  app-dev-logs:
    driver: local